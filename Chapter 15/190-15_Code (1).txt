1.insert sObjectupdate sObjectdelete sObjectundelete sObjectupsert sObject2.Account acc= new Account();acc.Name= 'saif';insert acc;List<Account> accList= new List<Account>();Account acc1= new Account();acc1.Name= 'saif';accList.add(acc1);Account acc2= new Account();acc2.Name= 'neha';accList.add(acc2);insert accList;Account acct = [SELECT Id, BillingCity FROM Account WHERE Name ='saif' LIMIT 1];acct.BillingCity = Darbhanga';update acct;Account acct = [SELECT Id FROM Account WHERE Name ='saif' LIMIT 1];delete acct; Account[] savedAccts = [SELECT Id FROM Account WHERE Name ='saif'  ALL ROWS];undelete savedAccts;List<Account> accList = new List<Account>();// we add some data into it upsert accList ExtIDField__c;3.List<Account> accList=[SELECT Name,(SELECT lastName from Contacts) from Account where Name LIKE '%saif%']; for(Account acc : accList){   acc.Name=acc.Name+'-India';    for(Contact cnt : acc.Contacts){      cnt.lastName= cnt.lastName+'--Bihar';   }}// Now you can see here, we have changed the name of account and Lastname of contact // if we want to update it we can't update these in a single statemnent update accList;// it will only update the accList , not contact of it // for that we will need a new conatctlist and update statement List<Contact> cntList= New List<Contact>();for(Account acc : accList){   for(Contact cnt : acc.Contacts){      cntList.add(cnt);   }}update cntList;4.Account acct = [SELECT Id, BillingCity FROM Account WHERE Name ='saif' LIMIT 1];acct.BillingCity = Darbhanga';try{update acct;}Catch(Exception e){	System.debug(e.getLineNumber());Sytem.debug(e.getMessages());} 5.Database.insert(sObject records, Boolean allorNone);Database.upsert(sObject records, Boolean allorNone);Database.update(sObject records, Boolean allorNone);Database.delete(sObject records, Boolean allorNone);6.List<Account> accList= new List<Account>();Account acc1= new Account();acc1.Name= 'saif';accList.add(acc1); Account acc2= new Account();acc2.Name= 'neha';accList.add(acc2); Database.insert(accList ,false);// partial success , if one fails , other can be insertedDatabase.insert(accList ,true);// ful success , either both or none can be inserted 7.Contact[] cnts = new List<Contact>{    new Contact(LastName='cnt of Atul', Phone='+919897699028'),    new Contact()};Database.SaveResult[] srList = Database.insert(cnts, false); // Iterate through each returned resultfor (Database.SaveResult sr : srList) {    if (sr.isSuccess()) {        // Operation was successful, so get the ID of the record that was processed        System.debug('Successfully inserted Contact. Contact ID: ' + sr.getId());    }    else {        // Operation failed, so get all errors                        for(Database.Error err : sr.getErrors()) {            System.debug('The following error has occurred.');                                System.debug(err.getStatusCode() + ': ' + err.getMessage());            System.debug('Contact fields that affected this error: ' + err.getFields());        }    }}8.List<sObject> multipleObjRecords= new List<sObject>();Account acc = new Account(Name = 'Saif');Contact con = new Contact(lastName='test 1' , email='abc@gmail.com');multipleObjRecords.add(acc);multipleObjRecords.add(con);insert multipleObjRecords; 9.List<Account> accList=[SELECT Name,(SELECT lastName from Contacts) from Account where Name LIKE '%saif%']; for(Account acc : accList){   acc.Name=acc.Name+'-India';    for(Contact cnt : acc.Contacts){      cnt.lastName= cnt.lastName+'--Bihar';   }   update acc.Contacts;}update accList;// if count of update command is less than 150, no issue but when it cross 150, dml exception limit error will be there// because update command is within the for loop